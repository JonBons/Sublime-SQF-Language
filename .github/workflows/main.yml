name: Update SQF grammars

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 13 * * 6"  # runs every saturday at 13:00 UTC

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # allows the workflow to push commits using GITHUB_TOKEN

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch upstream grammars to temp (not committed)
        run: |
          set -euo pipefail
          curl -sSfL "https://raw.githubusercontent.com/vlad333000/vscode-sqf/refs/heads/master/syntaxes/sqf.tmLanguage.json" \
            -o /tmp/sqf.tmLanguage.json
          curl -sSfL "https://raw.githubusercontent.com/vlad333000/vscode-sqf/refs/heads/master/syntaxes/arma-cfg.tmLanguage.json" \
            -o /tmp/arma-cfg.tmLanguage.json

      - name: Extract version from fetched sqf.tmLanguage.json
        id: version
        run: |
          set -euo pipefail
          VERSION=$(jq -r '.version // .informationVersion // empty' /tmp/sqf.tmLanguage.json)
          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            VERSION=$(date -u +'%Y-%m-%d')
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      # NEW: find the latest upstream commit touching the file
      - name: Get upstream commit for sqf.tmLanguage.json
        id: upstream
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          API="https://api.github.com/repos/vlad333000/vscode-sqf/commits?path=syntaxes/sqf.tmLanguage.json&per_page=1&sha=master"
          RESP=$(curl -sSfL \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$API")
          SHA=$(echo "$RESP" | jq -r '.[0].sha // empty')
          if [ -z "$SHA" ] || [ "$SHA" = "null" ]; then
            echo "short=unknown" >> "$GITHUB_OUTPUT"
            echo "sha=" >> "$GITHUB_OUTPUT"
          else
            SHORT=${SHA:0:7}
            echo "short=$SHORT" >> "$GITHUB_OUTPUT"
            echo "sha=$SHA" >> "$GITHUB_OUTPUT"
          fi

      - name: Run generator
        run: |
          set -euo pipefail
          # Your script fetches from raw GitHub URLs itself.
          # If you ever want to force local files from /tmp, uncomment below:
          # SQF_TMLANGUAGE_URL=file:///tmp/sqf.tmLanguage.json \
          # CFG_TMLANGUAGE_URL=file:///tmp/arma-cfg.tmLanguage.json \
          python3 tools/generate_sqf_template.py

      - name: Detect changes in generated artifacts
        id: diff
        run: |
          set -euo pipefail
          # Stage the files the generator updates
          git add SQF.tmLanguage SQF.sublime-completions || true
          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit & push
        if: steps.diff.outputs.changed == 'true'
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          MSG="chore: update SQF grammar to v${{ steps.version.outputs.version }}"
          if [ -n "${{ steps.upstream.outputs.short }}" ] && [ "${{ steps.upstream.outputs.short }}" != "unknown" ]; then
            MSG="$MSG (vscode-sqf@${{ steps.upstream.outputs.short }})"
          fi

          git commit -m "$MSG"
          git push
